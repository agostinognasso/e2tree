% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/e2tree.R
\name{e2tree}
\alias{e2tree}
\title{Explainable Ensemble Tree}
\usage{
e2tree(
  formula,
  data,
  D,
  setting = list(impTotal = 0.1, maxDec = 0.01, n = 5, level = 5, tMax = 5),
  method = "classification"
)
}
\arguments{
\item{formula}{is a formula describing the model to be fitted, with a response but no interaction terms.}

\item{data}{a data frame containing the variables in the model. It is a data frame in which to interpret the variables named in the formula.}

\item{D}{is the dissimilarity matrix. This is a dissimilarity matrix measuring the discordance between two observations concerning a given classifier of a random forest model. The dissimilarity matrix is obtained with the \link{createDisMatrix} function.}

\item{setting}{is a list containing the set of stopping rules for the tree building procedure.
\tabular{lll}{
\code{impTotal}\tab   \tab The threshold for the impurity in the node\cr
\code{maxDec}\tab   \tab The threshold for the maximum impurity decrease of the node\cr
\code{n}\tab   \tab The minimum number of the observations in the node \cr
\code{level}\tab   \tab The maximum depth of the tree (levels) \cr
\code{tMax}\tab   \tab The maximum number of terminal nodes\cr}}

\item{method}{The 'method' parameter specifies the method to be used for the analysis. There are two supported methods:
\tabular{lll}{
\code{classification}\tab   \tab Select this method if you want to perform a classification analysis. Classification is a supervised learning task where the goal is to assign input data to predefined categories or classes. The function will use algorithms tailored for classification tasks to build a model and make predictions based on the input data.\cr
\code{regression}\tab   \tab Choose this method if you want to perform a regression analysis. Regression is a supervised learning task that aims to predict continuous numerical values based on input data. The function will use regression algorithms to build a model that can estimate the relationship between variables and predict numeric outcomes.\cr}
Default is \code{setting=list(impTotal=0.1, maxDec=0.01, n=5, level=5, tMax=5)}.}
}
\value{
A e2tree object, which is a list with the following components:
\tabular{lll}{
\code{tree}\tab   \tab  A data frame representing the main structure of the tree aimed at explaining and graphically representing the relationships and interactions between the variables used to perform an ensemble method. \cr
\code{call}\tab   \tab The matched call\cr
\code{terms}\tab   \tab A list of terms and attributes \cr
\code{control}\tab   \tab A list containing the set of stopping rules for the tree building procedure  \cr
\code{varimp}\tab   \tab A list containing a table and a plot for the variable importance. Variable importance refers to a quantitative measure that assesses the contribution of individual variables within a predictive model towards accurate predictions. It quantifies the influence or impact that each variable has on the model's overall performance. Variable importance provides insights into the relative significance of different variables in explaining the observed outcomes and aids in understanding the underlying relationships and dynamics within the model \cr}
}
\description{
It creates an explainable tree for Random Forest. Explainable Ensemble Trees (E2Tree) aimed to generate a “new tree” that can explain and represent the relational structure between the response variable and the predictors. This lead to providing a tree structure similar to those obtained for a decision tree exploiting the advantages of a dendrogram-like output.
}
\examples{
## Classification:
data(iris)

# Create training and validation set:
data_set_size <- floor(nrow(iris)/2)
indexes <- sample(1:nrow(iris), size = data_set_size)
training <- iris[indexes,]
validation <- iris[-indexes,]
response_training <- training[,5]
response_validation <- validation[,5]

# Perform training:
rf = randomForest::randomForest(Species ~ ., data=training, ntree=1000, mtry=2,
                             importance=TRUE, keep.inbag=TRUE, proximity=TRUE)

D <- createDisMatrix(rf, data=training)
setting=list(impTotal=0.1, maxDec=0.01, n=5, level=5, tMax=5)
tree <- e2tree(Species ~ ., training, D, setting)

# Convert e2tree into an rpart object:
expl_plot <- rpart2Tree(tree)

# Run summary:
summary(expl_plot)

# Plot using rpart.plot package:
rpart.plot::rpart.plot(expl_plot)

}
